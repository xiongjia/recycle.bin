%title Tips (Last update: Thu Feb  6 22:40:20 CST 2014)
%toc

= scp =
* 日常操作:<br>
 - source 放在前面，target 放在后面。
 - `-r` - (Recursively) 表示递归 srouce。

 | Upload file     | `scp SourceFile user@host:directory/TargetFile`        |
 | Upload folder   | `scp -r SourceFolder user@host:directory/TargetFolder` |
 | Download file   | `scp user@host:directory/SourceFile TargetFile`        |
 | Download folder | `scp -r user@host:directory/SourceFolder TargetFolder` |

* Windows 上的選擇:<br>
 - [[http://www.chiark.greenend.org.uk/~sgtatham/putty/|Putty]] 提供了  Windows 版 SSH client 的实现。`pscp.exe` 可以实现与 scp 一样的功能。
 - 安装 Cygwin or Mingw 并选上对应的 ssh 组件。
* Auto login <br>
 有时會把 scp 写在 script 里自动执行。不希望每次输入口令。多種解決辦法:
 - 使用 ssh 证书认证。 在 scp 命令里加入 `-i 'private key file'` (应该是最佳选择)
 - 使用 sshpass 如:
 `sshpass -p "password" scp -r user@host:directory/SourceFolder TargetFolder` <br>
 缺点很多：1.需要把 password 写在脚本里 2. 不是所有平台都有 sshpass, 比如：osx 上目前版本的 brew 便无法安装 sshpass。

-----

= Rsync =
* 日常操作:<br>
 `rsync -e "/usr/bin/ssh"  --bwlimit=2000 -av local_dir user@host:remote_dir`<br>
 # local_directory - 本地同步的目录。 <br>
 如果以 '/' 结尾表示同步此目录下的。不加则会上传这个目录。例如:<br>
 './dist/' - 表示同步 dist 目录下<br>
 'dist' - 会吧 'dist' 这级也传上去。
 # --bwlimit=KBPS - 带宽限制
* NODE 中使用 Rsync - 参考 [[node|NODE]] 中的 _rsyncwrapper_

-----

= GIT =
* GIT-pro
 - github: https://github.com/progit/progit
 - online book en: http://git-scm.com/book/en/
 - online book 中文簡體: http://git-scm.com/book/zh
* GIT internals
 - 比 git pro 簡潔一些
 - github: https://github.com/pluralsight/git-internals-pdf
* 備忘(有時自己會忘記的 commands ): 
 - 刪除 remote branch <br>
   git push origin --delete <branchName>
 - 清除本地無效的 remote branch 
   git remote prune origin

